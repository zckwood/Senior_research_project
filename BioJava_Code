//Here is the biojava code
package research;
import java.util.Map;
import java.util.Random;
import org.biojava.nbio.core.sequence.ProteinSequence;
import org.biojava.nbio.core.exceptions.CompoundNotFoundException;
import org.biojava.nbio.core.sequence.DNASequence;
import org.biojava.nbio.core.sequence.RNASequence;
import org.biojava.nbio.core.sequence.compound.AminoAcidCompound;
import org.biojava.nbio.core.sequence.template.Sequence;
import org.biojava.nbio.core.sequence.transcription.Frame;
import org.biojava.nbio.core.sequence.transcription.TranscriptionEngine;

public class translate {
	public static String randomDNAString(int dnaLength) {
	    Random rand = new Random();
	    StringBuilder dna = new StringBuilder(dnaLength);

	    for (int i = 0; i < dnaLength; i++) {
	        dna.append("ACGT".charAt(rand.nextInt(4)));
	    }
	    return dna.toString();
	}
	public static void main(String args[]) throws CompoundNotFoundException {
		//Gets dna sequence and is randomized 
		DNASequence dna = new DNASequence(randomDNAString(100000));
		
		//System.out.println(dna); this would output our randomized dna string
		
		//RNASequence rna = dna.getRNASequence();  this would transcribe our random dna sequence
		
		//System.out.println(rna); output the rna sequence
				
		//ProteinSequence protein = rna.getProteinSequence(); translate the rna to protein
		
		// System.out.println(protein); print the protein
		
		TranscriptionEngine te = TranscriptionEngine.getDefault(); 
		Frame[] frames = Frame.getReverseFrames();
		Map<Frame, Sequence<AminoAcidCompound>> results1 = te.multipleFrameTranslation(dna, frames); 
		System.out.println(results1); // this prints out from 3 lines of code all three reverse frames 
		
		Frame[] frames2 = Frame.getForwardFrames();
		Map<Frame, Sequence<AminoAcidCompound>> results2 = te.multipleFrameTranslation(dna, frames2); 
		System.out.println(results2); // this prints out from 2 lines of code all three forward frames
		}
}
